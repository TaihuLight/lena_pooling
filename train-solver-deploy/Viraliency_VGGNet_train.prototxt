name: "ViralityNet"
layer {
  name: "pair_data"
  type: "Data"
  top: "pair_data"
  include {
    phase: TRAIN
  }
  transform_param {
     mean_value: 104.008
     mean_value: 116.669
     mean_value: 122.675
     mean_value: 104.008
     mean_value: 116.669
     mean_value: 122.675
  }
  data_param {
    source: "PATH_TO_TRAIN_DATA"
    backend: LMDB
    batch_size: 8
  }
}

layer {
  name: "labels"
  type: "Data"
  top: "label"
  include {
    phase: TRAIN
  }
  data_param {
    source: "PATH_TO_TRAIN_LABELS"
    backend: LMDB
    batch_size: 8
  }
}

layer {
  name: "pair_data"
  type: "Data"
  top: "pair_data"
  include {
    phase: TEST
  }
  transform_param {
     mean_value: 104.008
     mean_value: 116.669
     mean_value: 122.675
     mean_value: 104.008
     mean_value: 116.669
     mean_value: 122.675
  }
  data_param {
    source: "PATH_TO_TEST_DATA"
    backend: LMDB
    batch_size: 8
  }
}

layer {
  name: "labels"
  type: "Data"
  top: "label"
  include {
    phase: TEST
  }
  data_param {
    source: "PATH_TO_TEST_LABELS"
    backend: LMDB
    batch_size: 8
  }
}

layer {
  name: "slice_pair"
  type: "Slice"
  bottom: "pair_data"
  top: "data"
  top: "data_p"
  slice_param {
    slice_dim: 1
    slice_point: 3
  }
}

########convolutional network A#########
layer { bottom: "data" top: "conv1_1" name: "conv1_1" type: "Convolution"
  convolution_param { num_output: 64 pad: 1 kernel_size: 3 }
  param { name: "conv1_1_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv1_1_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv1_1" top: "conv1_1" name: "relu1_1" type: "ReLU"
}
layer { bottom: "conv1_1" top: "conv1_2" name: "conv1_2" type: "Convolution"
  convolution_param { num_output: 64 pad: 1 kernel_size: 3 }
  param { name: "conv1_2_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv1_2_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv1_2" top: "conv1_2" name: "relu1_2" type: "ReLU"
}
layer { bottom: "conv1_2" top: "pool1" name: "pool1" type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 }
}
layer { bottom: "pool1" top: "conv2_1" name: "conv2_1" type: "Convolution"
  convolution_param { num_output: 128 pad: 1 kernel_size: 3 }
  param { name: "conv2_1_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv2_1_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv2_1" top: "conv2_1" name: "relu2_1" type: "ReLU"
}
layer { bottom: "conv2_1" top: "conv2_2" name: "conv2_2" type: "Convolution"
  convolution_param { num_output: 128 pad: 1 kernel_size: 3 }
  param { name: "conv2_2_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv2_2_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv2_2" top: "conv2_2" name: "relu2_2" type: "ReLU"
}
layer { bottom: "conv2_2" top: "pool2" name: "pool2" type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 }
}
layer { bottom: "pool2" top: "conv3_1" name: "conv3_1" type: "Convolution"
  convolution_param { num_output: 256 pad: 1 kernel_size: 3 }
  param { name: "conv3_1_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv3_1_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv3_1" top: "conv3_1" name: "relu3_1" type: "ReLU"
}
layer { bottom: "conv3_1" top: "conv3_2" name: "conv3_2" type: "Convolution"
  convolution_param { num_output: 256 pad: 1 kernel_size: 3 }
  param { name: "conv3_2_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv3_2_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv3_2" top: "conv3_2" name: "relu3_2" type: "ReLU"
}
layer { bottom: "conv3_2" top: "conv3_3" name: "conv3_3" type: "Convolution"
  convolution_param { num_output: 256 pad: 1 kernel_size: 3 }
  param { name: "conv3_3_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv3_3_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv3_3" top: "conv3_3" name: "relu3_3" type: "ReLU"
}
layer { bottom: "conv3_3" top: "pool3" name: "pool3" type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 }
}
layer { bottom: "pool3" top: "conv4_1" name: "conv4_1" type: "Convolution"
  convolution_param { num_output: 512 pad: 1 kernel_size: 3 }
  param { name: "conv4_1_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv4_1_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv4_1" top: "conv4_1" name: "relu4_1" type: "ReLU"
}
layer { bottom: "conv4_1" top: "conv4_2" name: "conv4_2" type: "Convolution"
  convolution_param { num_output: 512 pad: 1 kernel_size: 3 }
  param { name: "conv4_2_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv4_2_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv4_2" top: "conv4_2" name: "relu4_2" type: "ReLU"
}
layer { bottom: "conv4_2" top: "conv4_3" name: "conv4_3" type: "Convolution"
  convolution_param { num_output: 512 pad: 1 kernel_size: 3 }
  param { name: "conv4_3_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv4_3_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv4_3" top: "conv4_3" name: "relu4_3" type: "ReLU"
}
layer { bottom: "conv4_3" top: "pool4" name: "pool4" type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 }
}
layer { bottom: "pool4" top: "conv5_1" name: "conv5_1" type: "Convolution"
  convolution_param { num_output: 512 pad: 1 kernel_size: 3 }
  param { name: "conv5_1_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv5_1_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv5_1" top: "conv5_1" name: "relu5_1" type: "ReLU"
}
layer { bottom: "conv5_1" top: "conv5_2" name: "conv5_2" type: "Convolution"
  convolution_param { num_output: 512 pad: 1 kernel_size: 3 }
  param { name: "conv5_2_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv5_2_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv5_2" top: "conv5_2" name: "relu5_2" type: "ReLU"
}
layer { bottom: "conv5_2" top: "conv5_3" name: "conv5_3" type: "Convolution"
  convolution_param { num_output: 512 pad: 1 kernel_size: 3 }
  param { name: "conv5_3_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv5_3_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv5_3" top: "conv5_3" name: "relu5_3" type: "ReLU"
}
layer { bottom: "conv5_3" top: "pool5" name: "pool5_b" type: "LenaPooling"
  param { name: "pool5_w" lr_mult: 0}
  lena_pooling_param { kernel_size: 14 stride: 14 mu_filler{type: "constant" value: 0.1}}
}

########Inner Products A #################
#######Virality Network A################
layer { name: "vir_feat" type: "InnerProduct" bottom: "pool5" top: "vir_feat" 
    param { name: "vir_feat_w" lr_mult: 1 decay_mult: 1} param {name: "vir_feat_b" lr_mult: 2 decay_mult: 0} 
    inner_product_param {num_output: 1 weight_filler {type: "gaussian" std: 0.01} bias_filler {type: "constant" value: 0.1} }}
    
########convolutional network B#########
layer { bottom: "data_p" top: "conv1_1_p" name: "conv1_1_p" type: "Convolution"
  convolution_param { num_output: 64 pad: 1 kernel_size: 3 }
  param { name: "conv1_1_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv1_1_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv1_1_p" top: "conv1_1_p" name: "relu1_1_p" type: "ReLU"
}
layer { bottom: "conv1_1_p" top: "conv1_2_p" name: "conv1_2_p" type: "Convolution"
  convolution_param { num_output: 64 pad: 1 kernel_size: 3 }
  param { name: "conv1_2_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv1_2_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv1_2_p" top: "conv1_2_p" name: "relu1_2_p" type: "ReLU"
}
layer { bottom: "conv1_2_p" top: "pool1_p" name: "pool1_p" type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 }
}
layer { bottom: "pool1_p" top: "conv2_1_p" name: "conv2_1_p" type: "Convolution"
  convolution_param { num_output: 128 pad: 1 kernel_size: 3 }
  param { name: "conv2_1_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv2_1_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv2_1_p" top: "conv2_1_p" name: "relu2_1_p" type: "ReLU"
}
layer { bottom: "conv2_1_p" top: "conv2_2_p" name: "conv2_2_p" type: "Convolution"
  convolution_param { num_output: 128 pad: 1 kernel_size: 3 }
  param { name: "conv2_2_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv2_2_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv2_2_p" top: "conv2_2_p" name: "relu2_2_p" type: "ReLU"
}
layer { bottom: "conv2_2_p" top: "pool2_p" name: "pool2_p" type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 }
}
layer { bottom: "pool2_p" top: "conv3_1_p" name: "conv3_1_p" type: "Convolution"
  convolution_param { num_output: 256 pad: 1 kernel_size: 3 }
  param { name: "conv3_1_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv3_1_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv3_1_p" top: "conv3_1_p" name: "relu3_1_p" type: "ReLU"
}
layer { bottom: "conv3_1_p" top: "conv3_2_p" name: "conv3_2_p" type: "Convolution"
  convolution_param { num_output: 256 pad: 1 kernel_size: 3 }
  param { name: "conv3_2_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv3_2_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv3_2_p" top: "conv3_2_p" name: "relu3_2_p" type: "ReLU"
}
layer { bottom: "conv3_2_p" top: "conv3_3_p" name: "conv3_3_p" type: "Convolution"
  convolution_param { num_output: 256 pad: 1 kernel_size: 3 }
  param { name: "conv3_3_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv3_3_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv3_3_p" top: "conv3_3_p" name: "relu3_3_p" type: "ReLU"
}
layer { bottom: "conv3_3_p" top: "pool3_p" name: "pool3_p" type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 }
}
layer { bottom: "pool3_p" top: "conv4_1_p" name: "conv4_1_p" type: "Convolution"
  convolution_param { num_output: 512 pad: 1 kernel_size: 3 }
  param { name: "conv4_1_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv4_1_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv4_1_p" top: "conv4_1_p" name: "relu4_1_p" type: "ReLU"
}
layer { bottom: "conv4_1_p" top: "conv4_2_p" name: "conv4_2_p" type: "Convolution"
  convolution_param { num_output: 512 pad: 1 kernel_size: 3 }
  param { name: "conv4_2_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv4_2_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv4_2_p" top: "conv4_2_p" name: "relu4_2_p" type: "ReLU"
}
layer { bottom: "conv4_2_p" top: "conv4_3_p" name: "conv4_3_p" type: "Convolution"
  convolution_param { num_output: 512 pad: 1 kernel_size: 3 }
  param { name: "conv4_3_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv4_3_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv4_3_p" top: "conv4_3_p" name: "relu4_3_p" type: "ReLU"
}
layer { bottom: "conv4_3_p" top: "pool4_p" name: "pool4_p" type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 }
}
layer { bottom: "pool4_p" top: "conv5_1_p" name: "conv5_1_p" type: "Convolution"
  convolution_param { num_output: 512 pad: 1 kernel_size: 3 }
  param { name: "conv5_1_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv5_1_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv5_1_p" top: "conv5_1_p" name: "relu5_1_p" type: "ReLU"
}
layer { bottom: "conv5_1_p" top: "conv5_2_p" name: "conv5_2_p" type: "Convolution"
  convolution_param { num_output: 512 pad: 1 kernel_size: 3 }
  param { name: "conv5_2_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv5_2_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv5_2_p" top: "conv5_2_p" name: "relu5_2_p" type: "ReLU"
}
layer { bottom: "conv5_2_p" top: "conv5_3_p" name: "conv5_3_p" type: "Convolution"
  convolution_param { num_output: 512 pad: 1 kernel_size: 3 }
  param { name: "conv5_3_w" lr_mult: 1 decay_mult: 1 }
  param { name: "conv5_3_b" lr_mult: 2 decay_mult: 0 }
}
layer { bottom: "conv5_3_p" top: "conv5_3_p" name: "relu5_3_p" type: "ReLU"
}
layer { bottom: "conv5_3_p" top: "pool5_p" name: "pool5_p" type: "LenaPooling"
  param { name: "pool5_w" lr_mult: 0}
  lena_pooling_param { kernel_size: 14 stride: 14 mu_filler{ type: "constant" value: 0.1 }}
}
########Inner Products B #################

#######Virality Network B################
layer { name: "vir_feat_p" type: "InnerProduct" bottom: "pool5_p" top: "vir_feat_p" 
    param { name: "vir_feat_w" lr_mult: 1 decay_mult: 1} param {name: "vir_feat_b" lr_mult: 2 decay_mult: 0} 
    inner_product_param {num_output: 1 weight_filler {type: "gaussian" std: 0.01} bias_filler { type: "constant" value: 0} }}
    
#########Subtraction_Operation########
layer { name: "subtract_virality" type: "Eltwise" bottom: "vir_feat" bottom: "vir_feat_p" top: "sim_virality"
    eltwise_param { operation: SUM coeff: 1 coeff: -1 } }
    
#########loss##################
layer { name: "loss5" type: "SigmoidCrossEntropyLoss" bottom: "sim_virality" bottom: "label" top: "loss6"}

